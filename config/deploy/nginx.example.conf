upstream gamingbase {
  server unix:/home/deployer/gamingbase/shared/tmp/sockets/puma.sock fail_timeout=0;
}

ssl_session_cache shared:ssl_session_cache:50m;
server_tokens off;
# more_set_headers "Server: Datus";
# more_set_headers "X-Hi-Human: Hello!";
set_real_ip_from 127.0.0.1;
real_ip_header X-Forwarded-For;

server {
  listen 443 ssl http2; # spdy

  server_name  gamingbase.co;

  root /home/deployer/gamingbase/current/public;
  try_files $uri/index.html $uri @gamingbase;

  location @gamingbase {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://gamingbase;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 500m;
  keepalive_timeout 10;
  proxy_connect_timeout 15;
  proxy_read_timeout 15;
  proxy_send_timeout 15;

  ssl on;
  ssl_certificate /etc/nginx/ssl/gamingbase_bundle.crt;
  ssl_certificate_key /etc/nginx/ssl/gamingbase.key;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_prefer_server_ciphers on;

  # Serve static assets
  location ~ ^/(assets)/ {
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
  }
}

server {
  listen       80;
  listen       443;
  server_name  www.gamingbase.co;
  return 301   https://gamingbase.co$request_uri;
}

server {
  listen       80;
  server_name  gamingbase.co;
  return 301   https://$host$request_uri;
}

server {
  server_name 199.223.253.78;
  return 301  https://gamingbase.co$request_uri;
}
